{
  "openapi": "3.0.0",
  "info": {
    "title": "API de Aluguel de Espaços",
    "description": "Documentação da API para aluguel de espaços de trabalho.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Servidor Local"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Registrar um novo usuário",
        "tags": ["Autenticação"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthRegister" },
              "examples": {
                "exemplo1": {
                  "summary": "Cadastro de um usuário médico",
                  "value": {
                    "name": "João Silva",
                    "email": "joao.silva@email.com",
                    "password": "Senha123#",
                    "phone": "(11) 98765-4321",
                    "profession": "Médico"
                  }
                },
                "exemplo2": {
                  "summary": "Cadastro de um advogado",
                  "value": {
                    "name": "Maria Souza",
                    "email": "maria.souza@advogados.com",
                    "password": "seguranca456",
                    "phone": "(21) 99999-8888",
                    "profession": "Advogada"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Usuário registrado com sucesso" },
          "400": { "description": "Erro ao registrar o usuário" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Autenticar um usuário",
        "tags": ["Autenticação"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthLogin" },
              "examples": {
                "login_sucesso": {
                  "summary": "Login válido",
                  "value": {
                    "email": "joao.silva@email.com",
                    "password": "Senha123#"
                  }
                },
                "login_falha": {
                  "summary": "Tentativa de login com senha incorreta",
                  "value": {
                    "email": "joao.silva@email.com",
                    "password": "senhaErrada"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário autenticado com sucesso",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" },
                "examples": {
                  "resposta_sucesso": {
                    "summary": "Token JWT gerado após login bem-sucedido",
                    "value": {
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Credenciais inválidas" }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Criar um novo usuário",
        "tags": ["Usuários"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "Usuário criado com sucesso" },
          "400": { "description": "Erro na criação do usuário" }
        }
      },
      "get": {
        "summary": "Listar todos os usuários",
        "tags": ["Usuários"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Lista de usuários cadastrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Retornar dados do usuário autenticado",
        "tags": ["Usuários"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Dados do usuário autenticado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "401": {
            "description": "Usuário não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Acesso negado. Token não fornecido."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter informações do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Erro ao buscar informações do usuário"
                    },
                    "error": {
                      "type": "string",
                      "example": "Detalhes do erro interno"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Buscar usuário por ID",
        "tags": ["Usuários"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": { "description": "Usuário não encontrado" }
        }
      },
      "delete": {
        "summary": "Deletar usuário por ID",
        "tags": ["Usuários"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Usuário deletado com sucesso" },
          "404": { "description": "Usuário não encontrado" }
        }
      }
    },
    "/places": {
      "post": {
        "summary": "Criar um novo espaço",
        "tags": ["Espaços"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Place" }
            }
          }
        },
        "responses": {
          "201": { "description": "Espaço criado com sucesso" },
          "400": { "description": "Erro ao criar espaço" }
        }
      },
      "get": {
        "summary": "Listar todos os espaços",
        "tags": ["Espaços"],
        "responses": {
          "200": {
            "description": "Lista de espaços disponíveis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Place" }
                }
              }
            }
          }
        }
      }
    },
    "places/own": {
      "get": {
        "summary": "Buscar espaços do usuário autenticado",
        "tags": ["Espaços"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Lista de espaços do usuário autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Place" }
                }
              }
            }
          },
          "204": {
            "description": "Nenhum espaço cadastrado para este usuário"
          },
          "401": {
            "description": "Usuário não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Acesso negado. Token não fornecido."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter espaços",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Erro ao buscar espaços do usuário"
                    },
                    "error": {
                      "type": "string",
                      "example": "Detalhes do erro interno"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/places/{id}": {
      "get": {
        "summary": "Buscar espaço por ID",
        "tags": ["Espaços"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "5d4a7f16-b2a3-4e19-9cb5-d6b7a8e2f471"
          }
        ],
        "responses": {
          "200": {
            "description": "Espaço encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Place" }
              }
            }
          },
          "404": { "description": "Espaço não encontrado" }
        }
      },
      "delete": {
        "summary": "Deletar espaço por ID",
        "tags": ["Espaços"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "5d4a7f16-b2a3-4e19-9cb5-d6b7a8e2f471"
          }
        ],
        "responses": {
          "200": { "description": "Espaço deletado com sucesso" },
          "404": { "description": "Espaço não encontrado" }
        }
      }
    },
    "/rents/request": {
      "post": {
        "summary": "Solicitar uma locação",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["placeId", "schedules"],
                "properties": {
                  "placeId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID do espaço a ser alugado"
                  },
                  "schedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["startDate", "endDate"],
                      "properties": {
                        "startDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Data e hora de início do aluguel"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Data e hora de término do aluguel"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Locação criada com sucesso" },
          "400": { "description": "Dados inválidos ou horários ausentes" },
          "404": { "description": "Espaço não encontrado" },
          "500": { "description": "Erro ao criar locação" }
        }
      }
    },
    "rents": {
      "post": {
        "summary": "Criar uma locação",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["placeId", "schedules"],
                "properties": {
                  "placeId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID do espaço a ser alugado",
                    "example": "5d4a7f16-b2a3-4e19-9cb5-d6b7a8e2f471"
                  },
                  "ownerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID do dono do espaço",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "renterId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID do usuário que está alugando o espaço",
                    "example": "987f6543-b2a1-4d3e-8cb5-d6a7b8e2c123"
                  },
                  "totalValue": {
                    "type": "number",
                    "description": "Valor total da locação calculado com base no tempo alugado",
                    "example": 300.5
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "approved", "rejected"],
                    "description": "Status inicial da locação",
                    "example": "pending"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["pix", "cartao", "boleto"],
                    "description": "Método de pagamento escolhido pelo locatário",
                    "example": "pix"
                  },
                  "schedules": {
                    "type": "array",
                    "description": "Lista de períodos de locação",
                    "items": {
                      "type": "object",
                      "required": ["startDate", "endDate"],
                      "properties": {
                        "startDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Data e hora de início do aluguel",
                          "example": "2025-04-15T08:00:00Z"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Data e hora de término do aluguel",
                          "example": "2025-04-15T12:00:00Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Locação criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rent"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou horários ausentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Os horários da locação são obrigatórios."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Espaço não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Espaço não encontrado."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao criar locação",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Erro ao criar locação"
                    },
                    "error": {
                      "type": "string",
                      "example": "Detalhes do erro interno"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Listar todas as locações (Apenas Admin)",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Lista de locações registradas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Rent" }
                }
              }
            }
          },
          "403": { "description": "Acesso negado" },
          "500": { "description": "Erro interno no servidor" }
        }
      }
    },
    "/rents/me": {
      "get": {
        "summary": "Listar locações do usuário autenticado",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Lista de locações do usuário autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Rent" }
                }
              }
            }
          },
          "500": { "description": "Erro ao obter locações" }
        }
      }
    },
    "/rents/{id}": {
      "get": {
        "summary": "Buscar locação por ID (Apenas Admin)",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": { "description": "Locação encontrada" },
          "403": { "description": "Acesso negado" },
          "404": { "description": "Locação não encontrada" },
          "500": { "description": "Erro interno no servidor" }
        }
      },
      "put": {
        "summary": "Atualizar uma locação",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "totalValue": {
                    "type": "number",
                    "description": "Novo valor total do aluguel"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "approved", "rejected"],
                    "description": "Novo status da locação"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Locação atualizada com sucesso" },
          "403": { "description": "Acesso negado" },
          "404": { "description": "Locação não encontrada" },
          "500": { "description": "Erro ao atualizar locação" }
        }
      },
      "delete": {
        "summary": "Deletar uma locação",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": { "description": "Locação deletada com sucesso" },
          "403": { "description": "Permissão negada" },
          "404": { "description": "Locação não encontrada" },
          "500": { "description": "Erro ao deletar locação" }
        }
      }
    },
    "/rents/{id}/approve": {
      "put": {
        "summary": "Aprovar ou rejeitar uma locação",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["approved", "rejected"],
                    "description": "Status da locação"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Locação aprovada ou rejeitada com sucesso" },
          "400": { "description": "Status inválido" },
          "403": { "description": "Permissão negada" },
          "404": { "description": "Locação não encontrada" },
          "500": { "description": "Erro ao processar locação" }
        }
      }
    },
    "/rents/{id}/cancel": {
      "put": {
        "summary": "Cancelar uma locação pendente",
        "tags": ["Locações"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": { "description": "Locação cancelada com sucesso" },
          "400": { "description": "Locação não está mais pendente" },
          "403": { "description": "Permissão negada" },
          "404": { "description": "Locação não encontrada" },
          "500": { "description": "Erro ao cancelar locação" }
        }
      }
    },
    "/places/{place_id}/equipments": {
      "post": {
        "summary": "Adicionar equipamento a um espaço",
        "tags": ["Espaços"],
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "201": { "description": "Equipamento adicionado com sucesso" },
          "400": { "description": "Erro ao adicionar equipamento" }
        }
      }
    },
    "/places/{place_id}/equipments/{equipmentId}": {
      "delete": {
        "summary": "Remover equipamento de um espaço",
        "tags": ["Espaços"],
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "equipmentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Equipamento removido com sucesso" },
          "404": { "description": "Equipamento não encontrado" }
        }
      }
    },
    "/ratings": {
      "post": {
        "summary": "Criar uma nova avaliação",
        "tags": ["Avaliações"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Rating" }
            }
          }
        },
        "responses": {
          "201": { "description": "Avaliação criada com sucesso" },
          "400": { "description": "Erro ao criar avaliação" }
        }
      },
      "get": {
        "summary": "Listar todas as avaliações",
        "tags": ["Avaliações"],
        "responses": {
          "200": {
            "description": "Lista de avaliações registradas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Rating" }
                }
              }
            }
          }
        }
      }
    },
    "/ratings/{id}": {
      "get": {
        "summary": "Buscar avaliação por ID",
        "tags": ["Avaliações"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "c7f6a9d8-b3e2-4f19-8a56-92d71e37a9f1"
          }
        ],
        "responses": {
          "200": {
            "description": "Avaliação encontrada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Rating" }
              }
            }
          },
          "404": { "description": "Avaliação não encontrada" }
        }
      },
      "delete": {
        "summary": "Deletar avaliação por ID",
        "tags": ["Avaliações"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "c7f6a9d8-b3e2-4f19-8a56-92d71e37a9f1"
          }
        ],
        "responses": {
          "200": { "description": "Avaliação deletada com sucesso" },
          "404": { "description": "Avaliação não encontrada" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": { "type": "string", "example": "João Silva" },
          "email": { "type": "string", "example": "joao.silva@email.com" },
          "password": { "type": "string", "example": "Senha123#" },
          "phone": { "type": "string", "example": "(11) 98765-4321" },
          "profession": { "type": "string", "example": "Médico" }
        }
      },
      "Place": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "5d4a7f16-b2a3-4e19-9cb5-d6b7a8e2f471"
          },
          "name": { "type": "string", "example": "Consultório Odontológico" },
          "address": {
            "type": "object",
            "example": {
              "rua": "Rua das Flores",
              "numero": "123",
              "cidade": "São Paulo",
              "estado": "SP",
              "cep": "01000-000",
              "pais": "Brasil",
              "bairro": "Centro",
              "complemento": "Opcional"
            }
          },
          "description": {
            "type": "string",
            "example": "Espaço para atendimentos odontológicos equipado com cadeira e materiais básicos."
          },
          "pricePerTurn": { "type": "number", "example": 150.0 },
          "availability": {
            "type": "object",
            "example": {
              "day": "2024-03-23",
              "availableTurns": "manhã"
            }
          },
          "ownerId": {
            "type": "string",
            "example": "5d4a7f16-b2a3-4e19-9cb5-d6b7a8e2f471"
          }
        }
      },
      "Rent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "a1b2c3d4-e5f6-7890-1234-56789abcdef0"
          },
          "placeId": {
            "type": "string",
            "example": "5d4a7f16-b2a3-4e19-9cb5-d6b7a8e2f471"
          },
          "ownerId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "renterId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "totalValue": { "type": "number", "example": 450.0 },
          "dateTimes": { "type": "object", "example": {} },
          "status": { "type": "string", "example": "pending" },
          "paymentMethod": { "type": "string", "example": "pix" }
        }
      },
      "Rating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "c7f6a9d8-b3e2-4f19-8a56-92d71e37a9f1"
          },
          "reviewerId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "reviewedId": {
            "type": "string",
            "example": "a1b2c3d4-e5f6-7890-1234-56789abcdef0"
          },
          "rentId": {
            "type": "string",
            "example": "a1b2c3d4-e5f6-7890-1234-56789abcdef0"
          },
          "description": { "type": "string", "example": "very good" },
          "rating": { "type": "number", "example": 4.5 }
        }
      },
      "AuthRegister": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "João Silva" },
          "email": { "type": "string", "example": "joao.silva@email.com" },
          "password": { "type": "string", "example": "Senha123#" },
          "phone": { "type": "string", "example": "(11) 98765-4321" },
          "profession": { "type": "string", "example": "Médico" }
        }
      },
      "AuthLogin": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "example": "joao.silva@email.com" },
          "password": { "type": "string", "example": "Senha123#" }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      }
    }
  }
}
